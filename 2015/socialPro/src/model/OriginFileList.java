package model;

import java.util.ArrayList;
import java.util.List;
import java.util.StringTokenizer;

//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Untitled
//  @ File Name : OriginFileList.java
//  @ Date : 2015-07-28
//  @ Author : 
//
//




public class OriginFileList {
	private List<OriginFile> list;

	public OriginFileList() {
		this.list = new ArrayList<OriginFile>();
	}
	
	public boolean addOriginFile(OriginFile originFile) {
	
		return this.list.add(originFile);
	}
	
	public boolean deleteOriginFile(String name, String folderCode) {
	
		OriginFile file = this.searchOriginFileName(name, folderCode);
		if(file==null)return false;
		return this.list.remove(file);
	}
	
	public boolean deleteOriginFilePath(String path) {
	
		OriginFile file = this.searchOriginFilePath(path);
		if(file==null)return false;
		return this.list.remove(file);
	}
	
	public boolean deleteOriginFileCode(String code) {
	
		OriginFile file = this.searchOriginFileCode(code);
		if(file==null)return false;
		return this.list.remove(file);
	}
	
	public boolean deleteOriginFiles(String name) {
	
		OriginFileList fileList = this.searchOriginFileName(name);
		if(fileList.getList().isEmpty())return false;
		for(OriginFile file:fileList.getList()){
			if(!this.list.remove(file))return false;
		}
		return true;
	}
	
	public boolean deleteOriginFilesFCode(String folderCode) {
	
		OriginFileList fileList = this.searchOriginFilefCode(folderCode);
		if(fileList.getList().isEmpty())return false;
		for(OriginFile file:fileList.getList()){
			if(!this.list.remove(file))return false;
		}
		return true;
	}
	
	public boolean modifyOriginFile(String name, String folderCode, String newName) {
	
		OriginFile file = this.searchOriginFileName(name, folderCode);
		if(file==null)return false;
		file.setName(newName);
		//
		StringTokenizer tokens = new StringTokenizer(file.getPath(),"\\");
		int cnt = tokens.countTokens();
		String newPath = new String();
		for(int i=0;i<cnt-1;i++){
			newPath+=tokens.nextToken()+"\\";
		}
		file.setPath(newPath+newName);
		//
		return true;
	}
	
	public boolean modifyOriginFilePath(String path, String newName) {
	
		OriginFile file = this.searchOriginFilePath(path);
		if(file==null)return false;
		file.setName(newName);
		//
		StringTokenizer tokens = new StringTokenizer(file.getPath(),"\\");
		int cnt = tokens.countTokens();
		String newPath = new String();
		for(int i=0;i<cnt-1;i++){
			newPath+=tokens.nextToken()+"\\";
		}
		file.setPath(newPath+newName);
		//
		return true;
	}
	
	public boolean modifyOriginFileFPath(String folderCode, String newParentPath) {
	
		OriginFileList fileList = this.searchOriginFilefCode(folderCode);
		if(fileList.getList().isEmpty())return false;
		for(OriginFile file:fileList.getList()){
			file.setPath(newParentPath+"\\"+file.getName());
		}
		return true;
	}
	
	public boolean modifyOriginFileCode(String code, String newName) {
	
		OriginFile file = this.searchOriginFileCode(code);
		if(file==null)return false;
		file.setName(newName);
		//
		StringTokenizer tokens = new StringTokenizer(file.getPath(),"\\");
		int cnt = tokens.countTokens();
		String newPath = new String();
		for(int i=0;i<cnt-1;i++){
			newPath+=tokens.nextToken()+"\\";
		}
		file.setPath(newPath+newName);
		//
		return true;
	}
	
	public OriginFileList searchOriginFileName(String name) {
	
		OriginFileList fileList = new OriginFileList();
		for(OriginFile file: this.list){
			
			if(file.getName().equals(name))fileList.addOriginFile(file);
		}return fileList;
	}
	
	public OriginFile searchOriginFileCode(String code) {
	
		for(OriginFile file: this.list){
			
			if(file.getCode().equals(code))return file;
		}return null;
	}
	
	public OriginFile searchOriginFilePath(String path) {
	
for(OriginFile file: this.list){
			
			if(file.getPath().equals(path))return file;
		}return null;
	}
	
	public OriginFileList searchOriginFilefCode(String folderCode) {
	
		OriginFileList fileList = new OriginFileList();
		for(OriginFile file: this.list){
			
			if(file.getFolderCode().equals(folderCode))fileList.addOriginFile(file);
		}return fileList;
	}
	
	public OriginFile searchOriginFileName(String name,String folderCode) {
		
		for(OriginFile file: this.list){
			
			if(file.getFolderCode().equals(folderCode))
				if(file.getName().equals(name))return file;
		}return null;
	}
	public List<OriginFile> getList() {
		return list;
	}
	public void setList(List<OriginFile> list) {
		this.list = list;
	}
	
}
