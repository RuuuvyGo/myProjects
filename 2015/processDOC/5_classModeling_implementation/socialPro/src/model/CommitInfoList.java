package model;

import java.util.ArrayList;
import java.util.List;

//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Untitled
//  @ File Name : CommitInfoList.java
//  @ Date : 2015-07-28
//  @ Author : 
//
//




public class CommitInfoList {
	private List<CommitInfo> list;
	
	
	public CommitInfoList() {
		this.list = new ArrayList<CommitInfo>();
	}
	
	public CommitInfoList(String code, String objectCode, String kind, String content,
			String date, String memberCode, boolean merge,String title) {
		this.list = new ArrayList<CommitInfo>();
		this.list.add(new CommitInfo(code,objectCode,kind,content,date,memberCode,merge,title));
	}
	public CommitInfoList(String code, String objectCode, String kind, String content,
			String date, String memberCode, boolean merge,String description, String title) {
		this.list = new ArrayList<CommitInfo>();
		this.list.add(new CommitInfo(code,objectCode,kind,content,date,memberCode,merge,description,title,null));
	}
	
	public CommitInfoList(String objectCode, String kind, String content,
			String date, String memberCode, boolean merge,String title) {
		this.list = new ArrayList<CommitInfo>();
		this.list.add(new CommitInfo(objectCode,kind,content,date,memberCode,merge,title));
	}
	public CommitInfoList(String objectCode, String kind, String content,
			String date, String memberCode, boolean merge,String description, String title) {
		this.list = new ArrayList<CommitInfo>();
		this.list.add(new CommitInfo(objectCode,kind,content,date,memberCode,merge,description,title));
	}

	public CommitInfoList(CommitInfo commitInfo){
		this.list=  new ArrayList<CommitInfo>();
		this.list.add(commitInfo);
	}
	
	public boolean addCommitInfo(CommitInfo commitInfo) {
		return this.list.add(commitInfo);
	}
	
	public boolean addCommitInfo(String objectCode, String kind, String content, String date, String memberCode, boolean merge, String title, String description) {
	
		return this.list.add(new CommitInfo(objectCode, kind, content, date, memberCode, merge, description, title));
	}
	
	public CommitInfo searchCommitInfoCode(String code) {
	
		for(CommitInfo info:this.list){
			if(info.getCode().equals(code))return info;
		}
		return null;
	}
	
	public CommitInfoList searchCommitInfo(String objectCode, String kind) {
	
		CommitInfoList infoList = new CommitInfoList();
		for(CommitInfo info:this.list){
			if(info.getObjectCode().equals(objectCode))
				if(info.getKind().equals(kind))infoList.addCommitInfo(info);
		}
		return infoList;
	}
	
	public CommitInfoList searchCommitInfo(String objectCode, String kind, boolean merge) {
	
		CommitInfoList infoList = new CommitInfoList();
		for(CommitInfo info:this.list){
			if(info.getObjectCode().equals(objectCode))
				if(info.getKind().equals(kind))
					if(info.isMerge()==merge)infoList.addCommitInfo(info);
		}
		return infoList;
	}
	
	
	
	public CommitInfoList searchCommitInfo(String objectCode, String kind, String date, String memberCode) {
	
		CommitInfoList infoList = new CommitInfoList();
		for(CommitInfo info:this.list){
			if(info.getObjectCode().equals(objectCode))
				if(info.getDate().equals(date))
					if(info.getMemberCode().equals(memberCode))infoList.addCommitInfo(info);
		}
		return infoList;
	}
	
	public CommitInfoList searchCommitInfo(String objectCode, String kind, String date, String memberCode, boolean merge) {
	
		CommitInfoList infoList = new CommitInfoList();
		for(CommitInfo info:this.list){
			if(info.getObjectCode().equals(objectCode))
				if(info.getDate().equals(date))
					if(info.getMemberCode().equals(memberCode))
						if(info.isMerge()==merge)infoList.addCommitInfo(info);
		}
		return infoList;
	}
	
	public CommitInfoList searchCommitInfoDate(String date) {
	
		CommitInfoList infoList = new CommitInfoList();
		for(CommitInfo info:this.list){
			if(info.getDate().equals(date))infoList.addCommitInfo(info);
		}
		return infoList;
	}

	public List<CommitInfo> getList() {
		return list;
	}

	public void setList(List<CommitInfo> list) {
		this.list = list;
	}
	
}
