package model;

import java.util.ArrayList;
import java.util.GregorianCalendar;
import java.util.List;

//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Untitled
//  @ File Name : BoardInfoList.java
//  @ Date : 2015-07-28
//  @ Author : 
//
//




public class BoardInfoList {
	private List<BoardInfo> list;
	
	public BoardInfoList() {
		this.list = new ArrayList<BoardInfo>();
	}
	
	public BoardInfoList(String title, String content, String member,
			List<String> tagList, GregorianCalendar makeDate, int click) {
		this.list = new ArrayList<BoardInfo>();
		this.list.add(new BoardInfo(title,content,member,tagList,makeDate,click));
	}
	
	public BoardInfoList(String code,String title, String content, String member,
			List<String> tagList, GregorianCalendar makeDate, int click) {
		this.list = new ArrayList<BoardInfo>();
		this.list.add(new BoardInfo(code,title,content,member,tagList,makeDate,click));
	}
	
	public BoardInfoList(String title, String content, String member,
			GregorianCalendar makeDate, int click) {
		this.list = new ArrayList<BoardInfo>();
		this.list.add(new BoardInfo(title,content,member,makeDate,click));
	}
	
	public BoardInfoList(String code,String title, String content, String member,
			GregorianCalendar makeDate, int click) {
		this.list = new ArrayList<BoardInfo>();
		this.list.add(new BoardInfo(code,title,content,member,makeDate,click));
	}
	public BoardInfoList (BoardInfo boardInfo){
		this.list = new ArrayList<BoardInfo>();
		this.list.add(boardInfo);
	}
	
	
	public boolean addBoardInfo(BoardInfo boardInfo) {
	
		return this.list.add(boardInfo);
	}
	
	public boolean addBoardInfo(String title, String content, String member, List<String> tagList, GregorianCalendar makeDate, int click) {
	
		return this.list.add(new BoardInfo(title, content, member, tagList, makeDate, click));
	}
	
	public boolean addBoardInfo(String title, String content, String member, GregorianCalendar makeDate, int click) {
	
		return this.list.add(new BoardInfo(title, content, member, makeDate, click));
	}
	
	public boolean deleteBoardInfoCode(String code) {
	
		BoardInfo info  = this.searchBoardInfoCode(code);
		if(info==null)return false;
		return this.list.remove(info);
	}
	
	public boolean deleteBoardInfoMem(String member) {
		
		BoardInfoList infoList  = this.searchBoardInfoMem(member);
		if(infoList.getList().isEmpty())return false;
		for(BoardInfo info :infoList.getList()){
			if(!this.list.remove(info))return false;
		}
		return true;
	
	}
	
	public boolean modifyBoardInfoTitle(String code, String title) {
	
		BoardInfo info  = this.searchBoardInfoCode(code);
		if(info==null)return false;
		info.setTitle(title);
		return true;
	}
	
	public boolean modifyBoardInfoContent(String code, String content) {
	
		BoardInfo info  = this.searchBoardInfoCode(code);
		if(info==null)return false;
		info.setContent(content);
		return true;
	}
	
	public boolean modifyBoardInfoAlter(String code, GregorianCalendar alterDate) {
	
		BoardInfo info  = this.searchBoardInfoCode(code);
		if(info==null)return false;
		info.setAlterDate(alterDate);
		return true;
	}
	
	public boolean modifyBoardInfoClick(String code, int click) {
	
		BoardInfo info  = this.searchBoardInfoCode(code);
		if(info==null)return false;
		info.setClick(click);
		info.setAlterDate(new GregorianCalendar());
		return true;
	}
	
	public BoardInfo searchBoardInfoCode(String code) {
		
		for(BoardInfo obj:this.list){
			if(obj.getCode().equals(code))return obj;
		}
		return null;
	}
	
	public BoardInfoList searchBoardInfoTitle(String title) {
	
		BoardInfoList objList=  new BoardInfoList();
		for(BoardInfo obj:this.list){
			if(obj.getTitle().equals(title))objList.addBoardInfo(obj);
		}
		return objList;
	}
	
	public BoardInfoList searchBoardInfoMem(String member) {
	
		BoardInfoList objList=  new BoardInfoList();
		for(BoardInfo obj:this.list){
			if(obj.getMember().equals(member))objList.addBoardInfo(obj);
		}
		return objList;
	}
	
	public BoardInfoList searchBoardInfoTags(List<String> tagList) {
	
		BoardInfoList objList=  new BoardInfoList();
		for(BoardInfo obj:this.list){
			int i=0;
			for(String str:obj.getTagList()){
				for(String str2:tagList){
					if(str.equals(str2))i++;
				}
			}
			if(i>0)objList.addBoardInfo(obj);
		}
		return objList;
	}
	
	public BoardInfoList searchBoardInfoTags(List<String> tagList, String title, String member) {
	
		BoardInfoList objList=  new BoardInfoList();
		for(BoardInfo obj:this.list){
			int i=0;
			for(String str:obj.getTagList()){
				for(String str2:tagList){
					if(str.equals(str2))i++;
				}
			}
			if(i>0){
				if(obj.getTitle().equals(title)){
					if(obj.getMember().equals(member))objList.addBoardInfo(obj);
				}
			}
		}
		return objList;
	}

	public List<BoardInfo> getList() {
		return list;
	}

	public void setList(List<BoardInfo> list) {
		this.list = list;
	}
	
}
