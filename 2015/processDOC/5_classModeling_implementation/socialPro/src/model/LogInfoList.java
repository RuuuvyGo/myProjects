package model;

import java.util.ArrayList;
import java.util.List;

//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Untitled
//  @ File Name : LogInfoList.java
//  @ Date : 2015-07-28
//  @ Author : 
//
//




public class LogInfoList {
	private List<LogInfo> list;
	
	public LogInfoList() {
		this.list = new ArrayList<LogInfo>();
	}
	
	public LogInfoList(List<LogInfo> list) {
		this.list = list;
	}
	
	public LogInfoList(String objectCode, String kind, String content,
			String date, String memberCode, boolean merge) {
		this.list = new ArrayList<LogInfo>();
		this.list.add(new LogInfo(objectCode,kind,content,date,memberCode,merge));
		
	}
	
	public LogInfoList(String code, String objectCode, String kind, String content,
			String date, String memberCode, boolean merge) {
		this.list = new ArrayList<LogInfo>();
		this.list.add(new LogInfo(code,objectCode,kind,content,date,memberCode,merge));
	}

	public boolean addLogInfo(LogInfo logInfo) {
	
		return this.list.add(logInfo);
	}
	
	public LogInfo searchLogInfoCode(String code) {
		for(LogInfo log:this.list){
			if(log.getCode().equals(code))return log;
		}return null;
	}
	
	public LogInfoList searchLogInfo(String objectCode, String kind) {
	
		LogInfoList logList=new LogInfoList();
		for(LogInfo log:this.list){
			if(log.getObjectCode().equals(objectCode))
				if(log.getKind().equals(kind))logList.addLogInfo(log);
		}return logList;
	}
	
	public LogInfoList searchLogInfo(String objectCode, String kind, boolean merge) {
	
		LogInfoList logList=new LogInfoList();
		for(LogInfo log:this.list){
			if(log.getObjectCode().equals(objectCode))
				if(log.getKind().equals(kind))
					if(log.isMerge()==merge)logList.addLogInfo(log);
		}return logList;
	}
	
	public LogInfoList searchLogInfo(String objectCode, String kind, String date) {
	
		LogInfoList logList=new LogInfoList();
		for(LogInfo log:this.list){
			if(log.getObjectCode().equals(objectCode))
				if(log.getKind().equals(kind))
					if(log.getDate().equals(date))logList.addLogInfo(log);
		}return logList;
	}
	
	
	public LogInfoList searchLogInfo(String objectCode, String kind, String date, String memberCode) {
	
		LogInfoList logList=new LogInfoList();
		for(LogInfo log:this.list){
			if(log.getObjectCode().equals(objectCode))
				if(log.getKind().equals(kind))
					if(log.getMemberCode().equals(memberCode))
						if(log.getDate().equals(date))logList.addLogInfo(log);
		}return logList;

	}
	
	public LogInfoList searchLogInfo(String objectCode, String kind, String date, String memberCode, boolean merge) {
	
		LogInfoList logList=new LogInfoList();
		for(LogInfo log:this.list){
			if(log.getObjectCode().equals(objectCode))
				if(log.getKind().equals(kind))
					if(log.getMemberCode().equals(memberCode))
						if(log.getDate().equals(date))
							if(log.isMerge()==merge)logList.addLogInfo(log);
		}return logList;
	}
	
	public LogInfoList searchLogInfoDate(String date) {
	
		LogInfoList logList=new LogInfoList();
		for(LogInfo log:this.list){
						if(log.getDate().equals(date))logList.addLogInfo(log);
		}return logList;
	}

	public List<LogInfo> getList() {
		return list;
	}

	public void setList(List<LogInfo> list) {
		this.list = list;
	}
	
}
