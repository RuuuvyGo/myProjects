package model;

import java.util.ArrayList;
import java.util.List;
import java.util.StringTokenizer;

//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Untitled
//  @ File Name : CopiedFileList.java
//  @ Date : 2015-07-28
//  @ Author : 
//
//




public class CopiedFileList {
	private List<CopiedFile> list;
	
	public CopiedFileList() {
		this.list = new ArrayList<CopiedFile>();
	}
	
	public CopiedFileList(CopiedFile copiedFile) {
		this.list = new ArrayList<CopiedFile>();
		this.list.add(copiedFile);
	}
	
	public boolean addCopiedFile(CopiedFile copiedFile) {
		return this.list.add(copiedFile);
	}
	
	public boolean deleteCopiedFilebyOriCode(String originFileCode) {
	
		CopiedFileList fileList = this.searchCopiedFileByOriCode(originFileCode);
		if(fileList.getList().isEmpty())return false;
		for(CopiedFile file:fileList.getList()){
			if(!this.list.remove(file))return false;
		}
		return true;
	}
	
	public boolean deleteCopiedFilebyOriFCode(String originFolderCode) {
	
		CopiedFileList fileList = this.searchCopiedFileByOriFCode(originFolderCode);
		if(fileList.getList().isEmpty())return false;
		for(CopiedFile file:fileList.getList()){
			if(!this.list.remove(file))return false;
		}
		return true;
	}
	
	public boolean deleteCopiedFile(String name, String folderCode) {
	
		CopiedFile file = this.searchCopiedFileName(name, folderCode);
		if(file==null)return false;
		return this.list.remove(file);
	}
	
	public boolean deleteCopiedFilePath(String path) {
	
		CopiedFile file = this.searchCopiedFilePath(path);
		if(file==null)return false;
		return this.list.remove(file);
	}
	
	public boolean deleteCopiedFileCode(String code) {
	
		CopiedFile file = this.searchCopiedFileCode(code);
		if(file==null)return false;
		return this.list.remove(file);
	}
	
	public boolean deleteCopiedFilesFCode(String folderCode) {
	
		CopiedFileList fileList = this.searchCopiedFilefCode(folderCode);
		if(fileList.getList().isEmpty())return false;
		for(CopiedFile file:fileList.getList()){
			if(!this.list.remove(file))return false;
		}
		return true;
	}
	
	public boolean modifyCopiedFileByOriCode(String originFileCode, String newOriFileCode) {
	
		CopiedFileList fileList = this.searchCopiedFileByOriCode(originFileCode);
		if(fileList.getList().isEmpty())return false;
		for(CopiedFile file:fileList.getList()){
			file.setOriginFileCode(originFileCode);
		}
		return true;
	}
	
	public boolean modifyCopiedFileByOriCode(String originFileCode, String newOriFileCode, String newParentPath) {
	
		CopiedFileList fileList = this.searchCopiedFileByOriCode(originFileCode);
		if(fileList.getList().isEmpty())return false;
		for(CopiedFile file:fileList.getList()){
			file.setOriginFileCode(newOriFileCode);
			file.setPath(newParentPath+"\\"+file.getName());
		}
		return true;
	}
	
	public boolean modifyCopiedFileByOriFCode(String originFolderCode, String newOriFolderCode) {
	
		CopiedFileList fileList = this.searchCopiedFileByOriFCode(originFolderCode);
		if(fileList.getList().isEmpty())return false;
		for(CopiedFile file:fileList.getList()){
			file.setOriginFolderCode(newOriFolderCode);
		}
		return true;
	}
	
	public boolean modifyCopiedFileByOriFCode(String originFolderCode, String newOriFolderCode, String newParentPath) {
	
		CopiedFileList fileList = this.searchCopiedFileByOriFCode(originFolderCode);
		if(fileList.getList().isEmpty())return false;
		for(CopiedFile file:fileList.getList()){
			file.setOriginFolderCode(newOriFolderCode);
			file.setPath(newParentPath+"\\"+file.getName());
		}
		return true;
	}
	
	public boolean modifyCopiedFile(String name, String folderCode, String newName) {
	
		CopiedFile file = this.searchCopiedFileName(newName, folderCode);
		if(file==null)return false;
		file.setName(newName);
		StringTokenizer tokens=new StringTokenizer(file.getPath(),"\\");
		String newPath = new String();
		int cnt = tokens.countTokens();
		for(int i=0;i<cnt-1;i++){
			newPath+=tokens.nextToken()+"\\";
		}
		file.setPath(newPath+"\\"+newName);
		return true;
	}
	
	public boolean modifyCopiedFilePath(String path, String newName) {
	
		CopiedFile file = this.searchCopiedFilePath(path);
		if(file==null)return false;
		file.setName(newName);
		StringTokenizer tokens=new StringTokenizer(path,"\\");
		String newPath = new String();
		int cnt = tokens.countTokens();
		for(int i=0;i<cnt-1;i++){
			newPath+=tokens.nextToken()+"\\";
		}
		file.setPath(newPath+"\\"+newName);
		return true;
	}
	
	public boolean modifyCopiedFileFPath(String folderCode, String newParentPath) {
	
		CopiedFileList fileList = this.searchCopiedFilefCode(folderCode);
		if(fileList.getList().isEmpty())return false;
		for(CopiedFile file:fileList.getList()){
			file.setPath(newParentPath+"\\"+file.getName());
		}
		return true;
	}
	
	public boolean modifyCopiedFileCode(String code, String newName) {
	
		CopiedFile file = this.searchCopiedFileCode(code);
		if(file==null)return false;
		file.setName(newName);
		StringTokenizer tokens=new StringTokenizer(file.getPath(),"\\");
		String newPath = new String();
		int cnt = tokens.countTokens();
		for(int i=0;i<cnt-1;i++){
			newPath+=tokens.nextToken()+"\\";
		}
		file.setPath(newPath+"\\"+newName);
		return true;
	}
	
	public CopiedFileList searchCopiedFileByOriCode(String originFileCode) {
	
		CopiedFileList fileList = new CopiedFileList();
		for(CopiedFile file:this.list){
			if(file.getOriginFileCode().equals(originFileCode))fileList.addCopiedFile(file);
		}	
		return fileList;
	}
	
	public CopiedFile searchCopiedFileByOriCode(String originFileCode, String path) {
	
		for(CopiedFile file:this.list){
			if(file.getOriginFileCode().equals(originFileCode))
				if(file.getPath().equals(path))return file;
		}
		return null;
	}
	
	public CopiedFileList searchCopiedFileByOriFCode(String originFolderCode) {
	
		CopiedFileList fileList = new CopiedFileList();
		for(CopiedFile file:this.list){
			if(file.getOriginFolderCode().equals(originFolderCode))fileList.addCopiedFile(file);
		}	
		return fileList;
	}
	
	public CopiedFileList searchCopiedFileByOriFCodeName(String originFolderCode, String name) {
	
		CopiedFileList fileList = new CopiedFileList();
		for(CopiedFile file:this.list){
			if(file.getOriginFolderCode().equals(originFolderCode))
				if(file.getName().equals(name))fileList.addCopiedFile(file);
		}	
		return fileList;
	}
	
	public CopiedFileList searchCopiedFileByOriFCodePath(String originFolderCode, String path) {
	
		CopiedFileList fileList = new CopiedFileList();
		for(CopiedFile file:this.list){
			if(file.getOriginFolderCode().equals(originFolderCode))
				if(file.getPath().equals(path))fileList.addCopiedFile(file);
		}	
		return fileList;
	}
	
	public CopiedFileList searchCopiedFileName(String name) {
	
		CopiedFileList fileList = new CopiedFileList();
		for(CopiedFile file:this.list){
			if(file.getName().equals(name))fileList.addCopiedFile(file);
		}	
		return fileList;
	}
	
	public CopiedFile searchCopiedFileCode(String code) {
		for(CopiedFile file:this.list){
			if(file.getCode().equals(code))return file;
		}	
		return null;
	}
	
	public CopiedFile searchCopiedFilePath(String path) {
	
		for(CopiedFile file:this.list){
			if(file.getPath().equals(path))return file;
		}	
		return null;
	}
	
	public CopiedFileList searchCopiedFilefCode(String folderCode) {
	
		CopiedFileList fileList = new CopiedFileList();
		for(CopiedFile file:this.list){
			if(file.getFolderCode().equals(folderCode))fileList.addCopiedFile(file);
		}	
		return fileList;
	}
	public CopiedFile searchCopiedFileName(String name, String folderCode) {
		
		for(CopiedFile file:this.list){
			if(file.getName().equals(name))
				if(file.getFolderCode().equals(folderCode))return file;
		}	
		return null;
	}

	
	public List<CopiedFile> getList() {
		return list;
	}


	public void setList(List<CopiedFile> list) {
		this.list = list;
	}
	
}
